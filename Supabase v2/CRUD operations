-------------------------------------------------------------------------------------------------

//INSERT row to supabase
//words to change:
tablename - to your supabase table name
columnName - to your supabase coulumn you want to fetch or leave empty for all column
argu - argument name

-------------------------------------------------------------------------------------------------

// Automatic FlutterFlow imports
import '/backend/supabase/supabase.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/custom_code/actions/index.dart'; // Imports other custom actions
import '/flutter_flow/custom_functions.dart'; // Imports custom functions
import 'package:flutter/material.dart';
// Begin custom action code
// DO NOT REMOVE OR MODIFY THE CODE ABOVE!

import 'package:supabase_flutter/supabase_flutter.dart';

Future<String?> insert(String argu) async {
  try {
    await Supabase.instance.client.from('tablename').insert([
      {'columnName': argu}
    ]);
  } on PostgrestException catch (e) {
    return e.message ?? '';
  }
  return null; // No error occurred
}

// Set your action name, define your arguments and return parameter,
// and then add the boilerplate code using the green button on the right!
